import { Plugin } from './server';
import { FSWatcher } from 'chokidar';
import MagicString from 'magic-string';
export declare const debugHmr: any;
export declare type HMRWatcher = FSWatcher & {
    handleVueReload: (file: string, timestamp?: number, content?: string) => void;
    handleJSReload: (file: string, timestamp?: number) => void;
    send: (payload: HMRPayload) => void;
};
declare type HMRStateMap = Map<string, Set<string>>;
export declare const hmrAcceptanceMap: HMRStateMap;
export declare const importerMap: HMRStateMap;
export declare const importeeMap: HMRStateMap;
export declare const hmrClientFilePath: string;
export declare const hmrClientId = "@hmr";
export declare const hmrClientPublicPath: string;
interface HMRPayload {
    type: 'vue-rerender' | 'vue-reload' | 'vue-style-update' | 'js-update' | 'style-update' | 'style-remove' | 'full-reload' | 'custom';
    timestamp: number;
    path?: string;
    id?: string;
    index?: number;
    customData?: any;
}
export declare const hmrPlugin: Plugin;
export declare function ensureMapEntry(map: HMRStateMap, key: string): Set<string>;
export declare function rewriteFileWithHMR(source: string, importer: string, s: MagicString): void;
export {};
