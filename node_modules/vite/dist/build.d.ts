import { InputOptions, OutputOptions, RollupOutput } from 'rollup';
import { Resolver } from './resolver';
import { Options } from 'rollup-plugin-vue';
export interface BuildOptions {
    /**
     * Project root path on file system.
     * Defaults to `process.cwd()`
     */
    root?: string;
    /**
     * Base public path when served in production.
     * Defaults to /
     */
    base?: string;
    /**
     * If true, will be importing Vue from a CDN.
     * Dsiabled automatically when a local vue installation is present.
     */
    cdn?: boolean;
    /**
     * Resolvers to map dev server public path requests to/from file system paths,
     * and optionally map module ids to public path requests.
     */
    resolvers?: Resolver[];
    /**
     * Defaults to `dist`
     */
    outDir?: string;
    /**
     * Nest js / css / static assets under a directory under `outDir`.
     * Defaults to `assets`
     */
    assetsDir?: string;
    /**
     * Static asset files smaller than this number (in bytes) will be inlined as
     * base64 strings.
     * Default: 4096 (4kb)
     */
    assetsInlineLimit?: number;
    /**
     * List files that are included in the build, but not inside project root.
     * e.g. if you are building a higher level tool on top of vite and includes
     * some code that will be bundled into the final build.
     */
    srcRoots?: string[];
    /**
     * Will be passed to rollup.rollup()
     * https://rollupjs.org/guide/en/#big-list-of-options
     */
    rollupInputOptions?: InputOptions;
    /**
     * Will be passed to bundle.generate()
     * https://rollupjs.org/guide/en/#big-list-of-options
     */
    rollupOutputOptions?: OutputOptions;
    /**
     * Will be passed to rollup-plugin-vue
     * https://github.com/vuejs/rollup-plugin-vue/blob/next/src/index.ts
     */
    rollupPluginVueOptions?: Partial<Options>;
    /**
     * Whether to emit index.html
     */
    emitIndex?: boolean;
    /**
     * Whether to emit assets other than JavaScript
     */
    emitAssets?: boolean;
    /**
     * Whether to write bundle to disk
     */
    write?: boolean;
    /**
     * Whether to minify output
     */
    minify?: boolean;
    /**
     * Whether to log asset info to console
     */
    silent?: boolean;
}
export interface BuildResult {
    html: string;
    assets: RollupOutput['output'];
}
/**
 * Bundles the app for production.
 * Returns a Promise containing the build result.
 */
export declare function build(options?: BuildOptions): Promise<BuildResult>;
/**
 * Bundles the app in SSR mode.
 * - All Vue dependencies are automatically externalized
 * - Imports to dependencies are compiled into require() calls
 * - Templates are compiled with SSR specific optimizations.
 */
export declare function ssrBuild(options?: BuildOptions): Promise<BuildResult>;
